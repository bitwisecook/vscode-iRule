import * as vscode from 'vscode';

const all_commands = [
    'accumulate',
    'active_members',
    'active_nodes',
    'b64decode',
    'b64encode',
    'client_addr',
    'client_port',
    'clientside',
    'clone',
    'close',
    'cname',
    'connect',
    'cpu',
    'crc32',
    'decode_uri',
    'discard',
    'domain',
    'drop',
    'event',
    'fasthash',
    'findclass',
    'findstr',
    'forward',
    'getfield',
    'host',
    'htonl',
    'htons',
    'http_cookie',
    'http_header',
    'http_host',
    'http_method',
    'http_uri',
    'http_version',
    'ifile',
    'imid',
    'ip_protocol',
    'ip_tos',
    'ip_ttl',
    'lasthop',
    'link_qos',
    'listen',
    'llookup',
    'local_addr',
    'local_port',
    'log',
    'matchclass',
    'matchregion',
    'md5',
    'member_priority',
    'members',
    'nexthop',
    'nodes_up',
    'nodes',
    'node',
    'ntohl',
    'ntohs',
    'peer',
    'pem_dtos',
    'persist',
    'pools',
    'pool',
    'priority',
    'qos_score',
    'qos_weight',
    'rateclass',
    'recv',
    'redirect',
    'reject',
    'relate_client',
    'relate_server',
    'remote_addr',
    'remote_port',
    'rmd160',
    'send',
    'server_addr',
    'server_port',
    'serverside',
    'session',
    'sha1',
    'sha256',
    'sha384',
    'sha512',
    'sharedvar',
    'snatpool',
    'snat',
    'substr',
    'table',
    'traffic_group',
    'translate',
    'ttl',
    'uptime',
    'urlcatblindquery',
    'urlcatquery',
    'use',
    'virtual',
    'vlan_id',
    'whereami',
    'whereis',
    'whoami',
    'wideip',
    'AAA::acct_result',
    'AAA::acct_send',
    'AAA::auth_result',
    'AAA::auth_send',
    'ACCESS::acl',
    'ACCESS::disable',
    'ACCESS::enable',
    'ACCESS::ephemeral-auth',
    'ACCESS::flowid',
    'ACCESS::log',
    'ACCESS::oauth',
    'ACCESS::perflow',
    'ACCESS::policy',
    'ACCESS::respond',
    'ACCESS::restrict_irule_events',
    'ACCESS::saml',
    'ACCESS::session',
    'ACCESS::user',
    'ACCESS::uuid',
    'ACCESS2::access2_proc',
    'ACL::action',
    'ACL::eval',
    'ADAPT::allow',
    'ADAPT::context_create',
    'ADAPT::context_current',
    'ADAPT::context_delete_all',
    'ADAPT::context_name',
    'ADAPT::context_static',
    'ADAPT::enable',
    'ADAPT::preview_size',
    'ADAPT::result',
    'ADAPT::select',
    'ADAPT::service_down_action',
    'ADAPT::timeout',
    'ADM::health',
    'ADM::is_ip_slowdown',
    'ADM::is_mitigated',
    'AES::decrypt',
    'AES::encrypt',
    'AES::key',
    'ANTIFRAUD::alert_additional_info',
    'ANTIFRAUD::alert_bait_signatures',
    'ANTIFRAUD::alert_component',
    'ANTIFRAUD::alert_defined_value',
    'ANTIFRAUD::alert_details',
    'ANTIFRAUD::alert_device_id',
    'ANTIFRAUD::alert_expected_value',
    'ANTIFRAUD::alert_fingerprint',
    'ANTIFRAUD::alert_forbidden_added_element',
    'ANTIFRAUD::alert_guid',
    'ANTIFRAUD::alert_html',
    'ANTIFRAUD::alert_http_referrer',
    'ANTIFRAUD::alert_id',
    'ANTIFRAUD::alert_license_id',
    'ANTIFRAUD::alert_min',
    'ANTIFRAUD::alert_origin',
    'ANTIFRAUD::alert_resolved_value',
    'ANTIFRAUD::alert_score',
    'ANTIFRAUD::alert_transaction_data',
    'ANTIFRAUD::alert_transaction_id',
    'ANTIFRAUD::alert_type',
    'ANTIFRAUD::alert_username',
    'ANTIFRAUD::alert_view_id',
    'ANTIFRAUD::client_id',
    'ANTIFRAUD::device_id',
    'ANTIFRAUD::disable_alert',
    'ANTIFRAUD::disable_app_layer_encryption',
    'ANTIFRAUD::disable_auto_transactions',
    'ANTIFRAUD::disable_injection',
    'ANTIFRAUD::disable_malware',
    'ANTIFRAUD::disable_phishing',
    'ANTIFRAUD::disable',
    'ANTIFRAUD::enable_log',
    'ANTIFRAUD::enable',
    'ANTIFRAUD::fingerprint',
    'ANTIFRAUD::geo',
    'ANTIFRAUD::guid',
    'ANTIFRAUD::result',
    'ANTIFRAUD::username',
    'ASM::captcha_age',
    'ASM::captcha_status',
    'ASM::captcha',
    'ASM::client_ip',
    'ASM::conviction',
    'ASM::deception',
    'ASM::disable',
    'ASM::enable',
    'ASM::fingerprint',
    'ASM::microservice',
    'ASM::payload',
    'ASM::policy',
    'ASM::raise',
    'ASM::severity',
    'ASM::signature',
    'ASM::status',
    'ASM::support_id',
    'ASM::threat_campaign',
    'ASM::unblock',
    'ASM::uncaptcha',
    'ASM::violation_data',
    'ASM::violation',
    'ASN1::decode',
    'ASN1::element',
    'ASN1::encode',
    'AUTH::abort',
    'AUTH::authenticate_continue',
    'AUTH::authenticate',
    'AUTH::cert_credential',
    'AUTH::cert_issuer_credential',
    'AUTH::last_event_session_id',
    'AUTH::password_credential',
    'AUTH::response_data',
    'AUTH::ssl_cc_ldap_status',
    'AUTH::ssl_cc_ldap_username',
    'AUTH::start',
    'AUTH::status',
    'AUTH::subscribe',
    'AUTH::unsubscribe',
    'AUTH::username_credential',
    'AUTH::wantcredential_prompt',
    'AUTH::wantcredential_prompt_style',
    'AUTH::wantcredential_type',
    'AVR::disable_cspm_injection',
    'AVR::disable',
    'AVR::enable',
    'AVR::log',
    'BIGPROTO::enable_fix_reset',
    'BIGTCP::release_flow',
    'BOTDEFENSE::action',
    'BOTDEFENSE::bot_anomalies',
    'BOTDEFENSE::bot_categories',
    'BOTDEFENSE::bot_name',
    'BOTDEFENSE::bot_signature_category',
    'BOTDEFENSE::bot_signature',
    'BOTDEFENSE::captcha_age',
    'BOTDEFENSE::captcha_status',
    'BOTDEFENSE::client_class',
    'BOTDEFENSE::client_type',
    'BOTDEFENSE::cookie_age',
    'BOTDEFENSE::cookie_status',
    'BOTDEFENSE::cs_allowed',
    'BOTDEFENSE::cs_attribute',
    'BOTDEFENSE::cs_possible',
    'BOTDEFENSE::device_id',
    'BOTDEFENSE::disable',
    'BOTDEFENSE::enable',
    'BOTDEFENSE::intent',
    'BOTDEFENSE::micro_service',
    'BOTDEFENSE::previous_action',
    'BOTDEFENSE::previous_request_age',
    'BOTDEFENSE::previous_support_id',
    'BOTDEFENSE::reason',
    'BOTDEFENSE::support_id',
    'BWC::color',
    'BWC::debug',
    'BWC::mark',
    'BWC::measure',
    'BWC::policy',
    'BWC::pps',
    'BWC::priority',
    'BWC::rate',
    'CACHE::accept_encoding',
    'CACHE::age',
    'CACHE::disabled',
    'CACHE::disable',
    'CACHE::enable',
    'CACHE::expire',
    'CACHE::headers',
    'CACHE::header',
    'CACHE::hits',
    'CACHE::payload',
    'CACHE::priority',
    'CACHE::trace',
    'CACHE::uri',
    'CACHE::useragent',
    'CACHE::userkey',
    'CATEGORY::analytics',
    'CATEGORY::filetype',
    'CATEGORY::lookup',
    'CATEGORY::matchtype',
    'CATEGORY::result',
    'CATEGORY::safesearch',
    'CLASSIFICATION::app',
    'CLASSIFICATION::category',
    'CLASSIFICATION::disable',
    'CLASSIFICATION::enable',
    'CLASSIFICATION::protocol',
    'CLASSIFICATION::result',
    'CLASSIFICATION::urlcat',
    'CLASSIFICATION::username',
    'CLASSIFY::application',
    'CLASSIFY::category',
    'CLASSIFY::defer',
    'CLASSIFY::disable',
    'CLASSIFY::urlcat',
    'CLASSIFY::username',
    'COMPRESS::buffer_size',
    'COMPRESS::disable',
    'COMPRESS::enable',
    'COMPRESS::gzip',
    'COMPRESS::method',
    'COMPRESS::nodelay',
    'CONNECTOR::disable',
    'CONNECTOR::enable',
    'CRYPTO::decrypt',
    'CRYPTO::encrypt',
    'CRYPTO::hash',
    'CRYPTO::keygen',
    'CRYPTO::sign',
    'CRYPTO::verify',
    'DATAGRAM::dns',
    'DATAGRAM::ip6',
    'DATAGRAM::ip',
    'DATAGRAM::l2',
    'DATAGRAM::tcp',
    'DATAGRAM::udp',
    'DECOMPRESS::disable',
    'DECOMPRESS::enable',
    'DEMANGLE::disable',
    'DEMANGLE::enable',
    'DHCP::version',
    'DHCPv4::chaddr',
    'DHCPv4::ciaddr',
    'DHCPv4::drop',
    'DHCPv4::giaddr',
    'DHCPv4::hlen',
    'DHCPv4::hops',
    'DHCPv4::htype',
    'DHCPv4::len',
    'DHCPv4::opcode',
    'DHCPv4::option',
    'DHCPv4::reject',
    'DHCPv4::secs',
    'DHCPv4::siaddr',
    'DHCPv4::type',
    'DHCPv4::xid',
    'DHCPv4::yiaddr',
    'DHCPv6::drop',
    'DHCPv6::hop_count',
    'DHCPv6::len',
    'DHCPv6::link_address',
    'DHCPv6::msg_type',
    'DHCPv6::option',
    'DHCPv6::peer_address',
    'DHCPv6::reject',
    'DHCPv6::transaction_id',
    'DIAMETER::avp',
    'DIAMETER::command',
    'DIAMETER::disconnect',
    'DIAMETER::drop',
    'DIAMETER::dynamic_route_insertion',
    'DIAMETER::dynamic_route_lookup',
    'DIAMETER::header',
    'DIAMETER::host',
    'DIAMETER::is_request',
    'DIAMETER::is_response',
    'DIAMETER::is_retransmission',
    'DIAMETER::length',
    'DIAMETER::message',
    'DIAMETER::payload',
    'DIAMETER::persist',
    'DIAMETER::realm',
    'DIAMETER::respond',
    'DIAMETER::result',
    'DIAMETER::retransmission_default',
    'DIAMETER::retransmission_reason',
    'DIAMETER::retransmission',
    'DIAMETER::retransmit',
    'DIAMETER::retry',
    'DIAMETER::route_status',
    'DIAMETER::session',
    'DIAMETER::state',
    'DNS::additional',
    'DNS::answer',
    'DNS::authority',
    'DNS::class',
    'DNS::disable',
    'DNS::drop',
    'DNS::edns0',
    'DNS::enable',
    'DNS::header',
    'DNS::is_wideip',
    'DNS::last_act',
    'DNS::len',
    'DNS::log',
    'DNS::name',
    'DNS::origin',
    'DNS::ptype',
    'DNS::query',
    'DNS::question',
    'DNS::rdata',
    'DNS::return',
    'DNS::rpz_policy',
    'DNS::rrname',
    'DNS::rrtype',
    'DNS::rr',
    'DNS::scrape',
    'DNS::tsig',
    'DNS::ttl',
    'DNS::type',
    'DNSMSG::header',
    'DNSMSG::record',
    'DNSMSG::section',
    'DOSL7::disable',
    'DOSL7::enable',
    'DOSL7::health',
    'DOSL7::is_ip_slowdown',
    'DOSL7::is_mitigated',
    'DOSL7::profile',
    'DOSL7::slowdown',
    'DSLITE::remote_addr',
    'ECA::disable',
    'ECA::domainname',
    'ECA::enable',
    'ECA::metadata',
    'ECA::status',
    'ECA::username',
    'FIX::tag',
    'FLOW::create_related',
    'FLOW::idle_duration',
    'FLOW::idle_timeout',
    'FLOW::peer',
    'FLOW::priority',
    'FLOW::refresh',
    'FLOW::this',
    'FLOWTABLE::count',
    'FLOWTABLE::limit',
    'FTP::allow_active_mode',
    'FTP::disable',
    'FTP::enable',
    'FTP::enforce_tls_session_reuse',
    'FTP::ftps_mode',
    'FTP::port',
    'GENERICMESSAGE::message',
    'GENERICMESSAGE::peer',
    'GENERICMESSAGE::route',
    'GTP::clone',
    'GTP::discard',
    'GTP::forward',
    'GTP::header',
    'GTP::ie',
    'GTP::length',
    'GTP::message',
    'GTP::new',
    'GTP::parse',
    'GTP::payload',
    'GTP::respond',
    'GTP::tunnel',
    'HA::status',
    'HSL::open',
    'HSL::send',
    'HTML::comment',
    'HTML::disable',
    'HTML::enable',
    'HTML::tag',
    'HTTP::class',
    'HTTP::close',
    'HTTP::collect',
    'HTTP::cookie',
    'HTTP::disable',
    'HTTP::enable',
    'HTTP::fallback',
    'HTTP::has_responded',
    'HTTP::header',
    'HTTP::host',
    'HTTP::hsts',
    'HTTP::is_keepalive',
    'HTTP::is_redirect',
    'HTTP::method',
    'HTTP::passthrough_reason',
    'HTTP::password',
    'HTTP::path',
    'HTTP::payload',
    'HTTP::proxy',
    'HTTP::query',
    'HTTP::redirect',
    'HTTP::reject_reason',
    'HTTP::release',
    'HTTP::request_num',
    'HTTP::request',
    'HTTP::respond',
    'HTTP::response',
    'HTTP::retry',
    'HTTP::status',
    'HTTP::uri',
    'HTTP::username',
    'HTTP::version',
    'HTTP2::active',
    'HTTP2::concurrency',
    'HTTP2::disable',
    'HTTP2::disconnect',
    'HTTP2::enable',
    'HTTP2::push',
    'HTTP2::requests',
    'HTTP2::stream',
    'HTTP2::version',
    'ICAP::header',
    'ICAP::method',
    'ICAP::status',
    'ICAP::uri',
    'IKE::auth_success',
    'IKE::cert',
    'IKE::san_dirname',
    'IKE::san_dns',
    'IKE::san_ediparty',
    'IKE::san_email',
    'IKE::san_ipadd',
    'IKE::san_othername',
    'IKE::san_rid',
    'IKE::san_uri',
    'IKE::san_x400',
    'IKE::subjectAltName',
    'ILX::call',
    'ILX::init',
    'ILX::notify',
    'IMAP::activation_mode',
    'IMAP::disable',
    'IMAP::enable',
    'IP::addr',
    'IP::client_addr',
    'IP::hops',
    'IP::idle_timeout',
    'IP::intelligence',
    'IP::local_addr',
    'IP::protocol',
    'IP::remote_addr',
    'IP::reputation',
    'IP::server_addr',
    'IP::stats',
    'IP::tos',
    'IP::ttl',
    'IP::version',
    'IPFIX::destination',
    'IPFIX::msg',
    'IPFIX::template',
    'ISESSION::deduplication',
    'ISTATS::get',
    'ISTATS::incr',
    'ISTATS::remove',
    'ISTATS::set',
    'IVS_ENTRY::result',
    'L7CHECK::protocol',
    'LB::bias',
    'LB::class',
    'LB::command',
    'LB::connect',
    'LB::connlimit',
    'LB::context_id',
    'LB::detach',
    'LB::down',
    'LB::dst_tag',
    'LB::enable_decisionlog',
    'LB::mode',
    'LB::persist',
    'LB::prime',
    'LB::queue',
    'LB::reselect',
    'LB::select',
    'LB::server',
    'LB::snat',
    'LB::src_tag',
    'LB::status',
    'LB::up',
    'LDAP::activation_mode',
    'LDAP::disable',
    'LDAP::enable',
    'LINK::lasthop',
    'LINK::nexthop',
    'LINK::qos',
    'LINK::vlan_id',
    'LSN::address',
    'LSN::disable',
    'LSN::inbound-entry',
    'LSN::inbound',
    'LSN::persistence-entry',
    'LSN::persistence',
    'LSN::pool',
    'LSN::port',
    'MESSAGE::field',
    'MESSAGE::proto',
    'MESSAGE::type',
    'MQTT::clean_session',
    'MQTT::client_id',
    'MQTT::collect',
    'MQTT::disable',
    'MQTT::disconnect',
    'MQTT::drop',
    'MQTT::dup',
    'MQTT::enable',
    'MQTT::insert',
    'MQTT::keep_alive',
    'MQTT::length',
    'MQTT::message',
    'MQTT::packet_id',
    'MQTT::password',
    'MQTT::payload',
    'MQTT::protocol_name',
    'MQTT::protocol_version',
    'MQTT::qos',
    'MQTT::release',
    'MQTT::replace',
    'MQTT::respond',
    'MQTT::retain',
    'MQTT::return_code_list',
    'MQTT::return_code',
    'MQTT::session_present',
    'MQTT::topic',
    'MQTT::type',
    'MQTT::username',
    'MQTT::will',
    'MR::collect',
    'MR::connect_back_port',
    'MR::connection_instance',
    'MR::connection_mode',
    'MR::equivalent_transport',
    'MR::flow_id',
    'MR::ignore_peer_port',
    'MR::instance',
    'MR::max_retries',
    'MR::message',
    'MR::payload',
    'MR::peer',
    'MR::prime',
    'MR::protocol',
    'MR::release',
    'MR::restore',
    'MR::retry',
    'MR::return',
    'MR::store',
    'MR::stream',
    'MR::transport',
    'NAME::lookup',
    'NAME::response',
    'NSH::chain',
    'NSH::context',
    'NSH::md1',
    'NSH::mimic',
    'NSH::mocksf',
    'NSH::path_id',
    'NSH::service_index',
    'NTLM::disable',
    'NTLM::enable',
    'OFFBOX::request',
    'ONECONNECT::detach',
    'ONECONNECT::label',
    'ONECONNECT::reuse',
    'ONECONNECT::select',
    'PCP::reject',
    'PCP::request',
    'PCP::response',
    'PEM::disable',
    'PEM::enable',
    'PEM::flow',
    'PEM::policy',
    'PEM::session',
    'PEM::subscriber',
    'PLUGIN::disable',
    'PLUGIN::enable',
    'POLICY::controls',
    'POLICY::names',
    'POLICY::rules',
    'POLICY::targets',
    'POP3::activation_mode',
    'POP3::disable',
    'POP3::enable',
    'PROFILE::access',
    'PROFILE::antifraud',
    'PROFILE::auth',
    'PROFILE::avr',
    'PROFILE::clientssl',
    'PROFILE::diameter',
    'PROFILE::exchange',
    'PROFILE::exists',
    'PROFILE::fasthttp',
    'PROFILE::fastl4',
    'PROFILE::fastL4',
    'PROFILE::ftp',
    'PROFILE::http',
    'PROFILE::httpclass',
    'PROFILE::httpcompression',
    'PROFILE::list',
    'PROFILE::oneconnect',
    'PROFILE::persist',
    'PROFILE::serverssl',
    'PROFILE::stream',
    'PROFILE::tcp',
    'PROFILE::tftp',
    'PROFILE::udp',
    'PROFILE::vdi',
    'PROFILE::webacceleration',
    'PROFILE::xml',
    'PROTOCOL_INSPECTION::disable',
    'PROTOCOL_INSPECTION::id',
    'PSC::aaa_reporting_interval',
    'PSC::attr',
    'PSC::auth_user_name',
    'PSC::calling_id',
    'PSC::imeisv',
    'PSC::imsi',
    'PSC::ip_address',
    'PSC::lease_time',
    'PSC::policy',
    'PSC::subscriber_id',
    'PSC::tower_id',
    'PSC::user_name',
    'QOE::disable',
    'QOE::enable',
    'QOE::video',
    'RADIUS::avp',
    'RADIUS::code',
    'RADIUS::id',
    'RADIUS::rtdom',
    'RADIUS::subscriber',
    'RESOLV::lookup',
    'RESOLVER::name_lookup',
    'RESOLVER::summarize',
    'REST::send',
    'REWRITE::disable',
    'REWRITE::enable',
    'REWRITE::payload',
    'REWRITE::post_process',
    'ROUTE::age',
    'ROUTE::bandwidth',
    'ROUTE::clear',
    'ROUTE::cwnd',
    'ROUTE::domain',
    'ROUTE::expiration',
    'ROUTE::mtu',
    'ROUTE::rttvar',
    'ROUTE::rtt',
    'RTSP::collect',
    'RTSP::header',
    'RTSP::method',
    'RTSP::msg_source',
    'RTSP::payload',
    'RTSP::release',
    'RTSP::respond',
    'RTSP::status',
    'RTSP::uri',
    'RTSP::version',
    'SCTP::client_port',
    'SCTP::collect',
    'SCTP::local_port',
    'SCTP::mss',
    'SCTP::payload',
    'SCTP::ppi',
    'SCTP::release',
    'SCTP::remote_port',
    'SCTP::respond',
    'SCTP::rto_initial',
    'SCTP::rto_max',
    'SCTP::rto_min',
    'SCTP::sack_timeout',
    'SCTP::server_port',
    'SDP::field',
    'SDP::media',
    'SDP::session_id',
    'SIP::call_id',
    'SIP::discard',
    'SIP::from',
    'SIP::header',
    'SIP::message',
    'SIP::method',
    'SIP::payload',
    'SIP::persist',
    'SIP::record-route',
    'SIP::respond',
    'SIP::response',
    'SIP::route_status',
    'SIP::route',
    'SIP::to',
    'SIP::uri',
    'SIP::via',
    'SIPALG::hairpin_default',
    'SIPALG::hairpin',
    'SIPALG::nonregister_subscriber_listener',
    'SMTP::disable',
    'SMTP::enable',
    'SMTPS::activation_mode',
    'SMTPS::disable',
    'SMTPS::enable',
    'SOCKS::allowed',
    'SOCKS::destination',
    'SOCKS::version',
    'SPDY::active',
    'SPDY::concurrency',
    'SPDY::disconnect',
    'SPDY::priority',
    'SPDY::requests',
    'SPDY::streamid',
    'SPDY::stream',
    'SPDY::version',
    'SSL::allow_dynamic_record_sizing',
    'SSL::alpn',
    'SSL::authenticate',
    'SSL::c3d',
    'SSL::cert_constraint',
    'SSL::cert',
    'SSL::cipher',
    'SSL::clientrandom',
    'SSL::collect',
    'SSL::disable',
    'SSL::enable',
    'SSL::extensions',
    'SSL::forward_proxy',
    'SSL::handshake',
    'SSL::is_renegotiation_secure',
    'SSL::maximum_record_size',
    'SSL::mode',
    'SSL::modssl_sessionid_headers',
    'SSL::nextproto',
    'SSL::payload',
    'SSL::profile',
    'SSL::release',
    'SSL::renegotiate',
    'SSL::respond',
    'SSL::secure_renegotiation',
    'SSL::sessionid',
    'SSL::sessionsecret',
    'SSL::sessionticket',
    'SSL::session',
    'SSL::sni',
    'SSL::tls13_secret',
    'SSL::unclean_shutdown',
    'SSL::verify_result',
    'STATS::get',
    'STATS::incr',
    'STATS::setmax',
    'STATS::setmin',
    'STATS::set',
    'STREAM::disable',
    'STREAM::enable',
    'STREAM::encoding',
    'STREAM::expression',
    'STREAM::match',
    'STREAM::max_matchsize',
    'STREAM::replace',
    'TAP::action',
    'TAP::config',
    'TAP::score',
    'TCP::abc',
    'TCP::analytics',
    'TCP::autowin',
    'TCP::bandwidth',
    'TCP::client_port',
    'TCP::close',
    'TCP::collect',
    'TCP::congestion',
    'TCP::delayed_ack',
    'TCP::dsack',
    'TCP::earlyrxmit',
    'TCP::ecn',
    'TCP::enhanced_loss_recovery',
    'TCP::idletime',
    'TCP::limxmit',
    'TCP::local_port',
    'TCP::lossfilterburst',
    'TCP::lossfilterrate',
    'TCP::lossfilter',
    'TCP::mss',
    'TCP::naglemode',
    'TCP::naglestate',
    'TCP::nagle',
    'TCP::notify',
    'TCP::offset',
    'TCP::option',
    'TCP::pacing',
    'TCP::payload',
    'TCP::proxybufferhigh',
    'TCP::proxybufferlow',
    'TCP::proxybuffer',
    'TCP::push_flag',
    'TCP::rcv_scale',
    'TCP::rcv_size',
    'TCP::recvwnd',
    'TCP::release',
    'TCP::remote_port',
    'TCP::respond',
    'TCP::rexmt_thresh',
    'TCP::rt_metrics_timeout',
    'TCP::rto',
    'TCP::rttvar',
    'TCP::rtt',
    'TCP::sendbuf',
    'TCP::server_port',
    'TCP::setmss',
    'TCP::snd_cwnd',
    'TCP::snd_scale',
    'TCP::snd_ssthresh',
    'TCP::snd_wnd',
    'TCP::unused_port',
    'TDS::msg',
    'TDS::session',
    'TMM::cmp_count',
    'TMM::cmp_groups',
    'TMM::cmp_group',
    'TMM::cmp_primary_group',
    'TMM::cmp_unit',
    'UDP::client_port',
    'UDP::debug_queue',
    'UDP::drop',
    'UDP::hold',
    'UDP::local_port',
    'UDP::max_rate',
    'UDP::mss',
    'UDP::payload',
    'UDP::release',
    'UDP::remote_port',
    'UDP::respond',
    'UDP::sendbuffer',
    'UDP::server_port',
    'UDP::unused_port',
    'URI::basename',
    'URI::compare',
    'URI::decode',
    'URI::encode',
    'URI::host',
    'URI::path',
    'URI::port',
    'URI::protocol',
    'URI::query',
    'VALIDATE::protocol',
    'WAM::disable',
    'WAM::enable',
    'WEBSSO::disable',
    'WEBSSO::enable',
    'WEBSSO::select',
    'WS::collect',
    'WS::disconnect',
    'WS::enabled',
    'WS::frame',
    'WS::masking',
    'WS::message',
    'WS::payload',
    'WS::release',
    'WS::request',
    'WS::response',
    'X509::cert_fields',
    'X509::extensions',
    'X509::hash',
    'X509::issuer',
    'X509::not_valid_after',
    'X509::not_valid_before',
    'X509::pem2der',
    'X509::serial_number',
    'X509::signature_algorithm',
    'X509::subject_public_key',
    'X509::subject_public_key_RSA_bits',
    'X509::subject_public_key_type',
    'X509::subject',
    'X509::verify_cert_error_string',
    'X509::version',
    'X509::whole',
    'XLAT::listen_lifetime',
    'XLAT::listen',
    'XLAT::src_addr',
    'XLAT::src_config',
    'XLAT::src_endpoint_reservation',
    'XLAT::src_nat_valid_range',
    'XLAT::src_port',
    'XML::address',
    'XML::collect',
    'XML::disable',
    'XML::element',
    'XML::enable',
    'XML::event',
    'XML::eventid',
    'XML::parse',
    'XML::payload',
    'XML::release',
    'XML::soap',
    'XML::subscribe',
];

let http_status_codes: vscode.CompletionItem[] = [
    new vscode.CompletionItem('100 Continue', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('101 Switching Protocols', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('102 Processing', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('103 Early Hints', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('200 OK', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('201 Created', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('202 Accepted', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('203 Non - Authoritative Information', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('204 No Content', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('205 Reset Content', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('206 Partial Content', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('207 Multi - Status', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('208 Already Reported', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('226 IM Used', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('300 Multiple Choices', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('301 Moved Permanently', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('302 Found', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('303 See Other', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('304 Not Modified', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('305 Use Proxy', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('306 Switch Proxy', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('307 Temporary Redirect', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('308 Permanent Redirect', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('400 Bad Request', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('401 Unauthorized', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('402 Payment Required', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('403 Forbidden', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('404 Not Found', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('405 Method Not Allowed', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('406 Not Acceptable', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('407 Proxy Authentication Required', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('408 Request Timeout', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('409 Conflict', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('410 Gone', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('411 Length Required', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('412 Precondition Failed', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('413 Payload Too Large', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('414 URI Too Long', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('415 Unsupported Media Type', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('416 Range Not Satisfiable', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('417 Expectation Failed', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('418 I\'m a teapot', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('421 Misdirected Request', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('422 Unprocessable Entity', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('423 Locked', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('424 Failed Dependency', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('425 Too Early', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('426 Upgrade Required', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('428 Precondition Required', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('429 Too Many Requests', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('431 Request Header Fields Too Large', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('451 Unavailable For Legal Reasons', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('500 Internal Server Error', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('501 Not Implemented', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('502 Bad Gateway', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('503 Service Unavailable', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('504 Gateway Timeout', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('505 HTTP Version Not Supported', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('506 Variant Also Negotiates', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('507 Insufficient Storage', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('508 Loop Detected', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('510 Not Extended', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('511 Network Authentication Required', vscode.CompletionItemKind.EnumMember),
];

for (let key in http_status_codes) {
    http_status_codes[key].insertText = http_status_codes[key].label.split(' ')[0];
}

const http_response_headers: vscode.CompletionItem[] = [
    new vscode.CompletionItem('Accept-Patch', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Accept-Ranges', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Age', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Allow', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Alt-Svc', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Cache-Control', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Connection', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Content-Disposition', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Content-Encoding', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Content-Language', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Content-Length', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Content-Location', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Content-Range', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Content-Type', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Date', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Delta-Base', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('ETag', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Expires', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('IM', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Last-Modified', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Link', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Location', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Pragma', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Proxy-Authenticate', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Public-Key-Pins', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Retry-After', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Server', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Set-Cookie', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Strict-Transport-Security', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Trailer', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Transfer-Encoding', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Tk', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Upgrade', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Vary', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Via', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Warning', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('WWW-Authenticate', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Access-Control-Allow-Origin', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Access-Control-Allow-Credentials', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Access-Control-Expose-Headers', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Access-Control-Max-Age', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Access-Control-Allow-Methods', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Access-Control-Allow-Headers', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Content-Security-Policy', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('Refresh', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('X-Powered-By', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('X-Request-ID', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('X-UA-Compatible', vscode.CompletionItemKind.EnumMember),
    new vscode.CompletionItem('X-XSS-Protection', vscode.CompletionItemKind.EnumMember),
];

const http_response_headers_values: Record<string, vscode.CompletionItem[]> = {
    'Accept-Patch': [],
    'Accept-Ranges': [],
    'Age': [],
    'Allow': [],
    'Alt-Svc': [],
    'Cache-Control': [
        new vscode.CompletionItem('max-age=', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('must-revalidate', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('no-cache', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('no-store', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('public', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('private', vscode.CompletionItemKind.EnumMember),
    ],
    'Connection': [],
    'Content-Disposition': [],
    'Content-Encoding': [],
    'Content-Language': [],
    'Content-Length': [
        new vscode.CompletionItem('[string length $payload', vscode.CompletionItemKind.EnumMember),
    ],
    'Content-Location': [],
    'Content-Range': [],
    'Content-Type': [
        new vscode.CompletionItem('application/javascript', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('application/json', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('application/jwt', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('application/octet-stream', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('image/gif', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('image/heif', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('image/jpeg', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('image/png', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('image/webp', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('image/x-icon', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('multipart/byteranges', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('multipart/form-data', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('text/css', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('text/html', vscode.CompletionItemKind.EnumMember),
        new vscode.CompletionItem('text/plain', vscode.CompletionItemKind.EnumMember),
    ],
    'Date': [],
    'Delta-Base': [],
    'ETag': [],
    'Expires': [],
    'IM': [],
    'Last-Modified': [],
    'Link': [],
    'Location': [],
    'Pragma': [],
    'Proxy-Authenticate': [],
    'Public-Key-Pins': [],
    'Retry-After': [],
    'Server': [],
    'Set-Cookie': [],
    'Strict-Transport-Security': [],
    'Trailer': [],
    'Transfer-Encoding': [
        new vscode.CompletionItem('gzip', vscode.CompletionItemKind.EnumMember),
    ],
    'Tk': [],
    'Upgrade': [],
    'Vary': [
        new vscode.CompletionItem('User-Agent', vscode.CompletionItemKind.EnumMember),
    ],
    'Via': [],
    'Warning': [],
    'WWW-Authenticate': [],
    'Access-Control-Allow-Origin': [],
    'Access-Control-Allow-Credentials': [],
    'Access-Control-Expose-Headers': [],
    'Access-Control-Max-Age': [],
    'Access-Control-Allow-Methods': [],
    'Access-Control-Allow-Headers': [],
    'Content-Security-Policy': [],
    'Refresh': [],
    'X-Powered-By': [],
    'X-Request-ID': [],
    'X-UA-Compatible': [],
    'X-XSS-Protection': [],
};

export function complete(document: vscode.TextDocument, position: vscode.Position) {
    let words: string[] = document.lineAt(position).text.substr(0, position.character).trim().split(' ');
    switch (words[0]) {
        case "log": {
            if (words.length === 1 || (words.length === 2 && !(words[1].includes('.')))) {
                return [
                    new vscode.CompletionItem('local0.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('local1.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('local2.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('local3.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('local4.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('local5.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('local6.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('local7.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('kern.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('user.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('mail.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('daemon.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('auth.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('syslog.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('lpr.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('news.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('uucp.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('cron.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('authpriv.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('ftp.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('ntp.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('security.', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('console.', vscode.CompletionItemKind.EnumMember),
                ];
            } else if (words.length === 2 && words[1].includes('.')) {
                return [
                    new vscode.CompletionItem('emerg', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('alert', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('crit', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('err', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('warning', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('notice', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('info', vscode.CompletionItemKind.EnumMember),
                    new vscode.CompletionItem('debug', vscode.CompletionItemKind.EnumMember),
                ];
            }
            break;
        }
        case "when": {
            if (words.length < 2) {
                return [
                    new vscode.CompletionItem('ACCESS_ACL_ALLOWED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ACCESS_ACL_DENIED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ACCESS_PER_REQUEST_AGENT_EVENT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ACCESS_POLICY_AGENT_EVENT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ACCESS_POLICY_COMPLETED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ACCESS_SAML_ASSERTION', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ACCESS_SAML_AUTHN', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ACCESS_SAML_SLO_REQ', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ACCESS_SAML_SLO_RESP', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ACCESS_SESSION_CLOSED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ACCESS_SESSION_STARTED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ADAPT_REQUEST_HEADERS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ADAPT_REQUEST_RESULT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ADAPT_RESPONSE_HEADERS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ADAPT_RESPONSE_RESULT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ANTIFRAUD_ALERT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ANTIFRAUD_LOGIN', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ASM_REQUEST_BLOCKING', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ASM_REQUEST_DONE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ASM_RESPONSE_VIOLATION', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('AUTH_RESULT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('BOTDEFENSE_ACTION', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('BOTDEFENSE_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CACHE_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CACHE_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CACHE_UPDATE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CATEGORY_MATCHED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CLASSIFICATION_DETECTED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CLIENT_ACCEPTED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CLIENT_CLOSED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CLIENT_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CLIENTSSL_CLIENTCERT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CLIENTSSL_CLIENTHELLO', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CLIENTSSL_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CLIENTSSL_HANDSHAKE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CLIENTSSL_PASSTHROUGH', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CLIENTSSL_SERVERHELLO_SEND', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('CONNECTOR_OPEN', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('DIAMETER_EGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('DIAMETER_INGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('DIAMETER_RETRANSMISSION', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('DNS_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('DNS_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ECA_REQUEST_ALLOWED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ECA_REQUEST_DENIED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('FIX_HEADER', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('FIX_MESSAGE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('FLOW_INIT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('GENERICMESSAGE_EGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('GENERICMESSAGE_INGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('GTP_GPDU_EGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('GTP_GPDU_INGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('GTP_PRIME_EGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('GTP_PRIME_INGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('GTP_SIGNALLING_EGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('GTP_SIGNALLING_INGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTML_COMMENT_MATCHED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTML_TAG_MATCHED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_DISABLED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_PROXY_CONNECT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_PROXY_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_PROXY_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_REJECT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_REQUEST_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_REQUEST_RELEASE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_REQUEST_SEND', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_RESPONSE_CONTINUE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_RESPONSE_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('HTTP_RESPONSE_RELEASE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ICAP_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('ICAP_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('IN_DOSL7_ATTACK', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('IVS_ENTRY_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('IVS_ENTRY_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('L7CHECK_CLIENT_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('L7CHECK_SERVER_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('LB_FAILED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('LB_QUEUED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('LB_SELECTED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('MQTT_CLIENT_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('MQTT_CLIENT_EGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('MQTT_CLIENT_INGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('MQTT_CLIENT_SHUTDOWN', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('MQTT_SERVER_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('MQTT_SERVER_EGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('MQTT_SERVER_INGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('MR_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('MR_EGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('MR_FAILED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('MR_INGRESS', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('PCP_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('PCP_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('PEM_POLICY', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('PEM_SUBS_SESS_CREATED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('PEM_SUBS_SESS_DELETED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('PEM_SUBS_SESS_UPDATED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('PERSIST_DOWN', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('PING_REQUEST_READY', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('PING_RESPONSE_READY', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('PROTOCOL_INSPECTION_MATCH', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('RADIUS_AAA_ACCT_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('RADIUS_AAA_ACCT_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('RADIUS_AAA_AUTH_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('RADIUS_AAA_AUTH_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('REWRITE_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('REWRITE_REQUEST_DONE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('REWRITE_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('REWRITE_RESPONSE_DONE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('RTSP_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('RTSP_REQUEST_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('RTSP_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('RTSP_RESPONSE_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('RULE_INIT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SA_PICKED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SERVER_CLOSED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SERVER_CONNECTED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SERVER_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SERVER_INIT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SERVERSSL_CLIENTHELLO_SEND', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SERVERSSL_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SERVERSSL_HANDSHAKE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SERVERSSL_SERVERCERT', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SERVERSSL_SERVERHELLO', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SIP_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SIP_REQUEST_SEND', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SIP_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SIP_RESPONSE_SEND', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('SOCKS_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('STREAM_MATCHED', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('TAP_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('TDS_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('TDS_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('USER_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('USER_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('WS_CLIENT_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('WS_CLIENT_FRAME', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('WS_CLIENT_FRAME_DONE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('WS_REQUEST', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('WS_RESPONSE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('WS_SERVER_DATA', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('WS_SERVER_FRAME', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('WS_SERVER_FRAME_DONE', vscode.CompletionItemKind.Event),
                    new vscode.CompletionItem('XML_CONTENT_BASED_ROUTING', vscode.CompletionItemKind.Event),
                ];
            } else if (words.length === 2) {
                return [new vscode.CompletionItem('priority '),];
            }
        }
        case "class": {
            if (words.length < 2) {
                return [
                    new vscode.CompletionItem('match', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('search', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('lookup', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('element', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('type', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('exists', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('size', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('names', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('get', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('startsearch', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('nextelement', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('anymore', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('donesearch', vscode.CompletionItemKind.Method),
                ];
            } else {
                switch (words[1]) {
                    case "nextelement":
                    case "element":
                    case "search":
                    case "match": {
                        if (words.length === 2) {
                            return [
                                new vscode.CompletionItem('-value --', vscode.CompletionItemKind.Keyword),
                                new vscode.CompletionItem('-name --', vscode.CompletionItemKind.Keyword),
                                new vscode.CompletionItem('-index --', vscode.CompletionItemKind.Keyword),
                                new vscode.CompletionItem('-element --', vscode.CompletionItemKind.Keyword),
                                new vscode.CompletionItem('-all --', vscode.CompletionItemKind.Keyword),
                                new vscode.CompletionItem('--', vscode.CompletionItemKind.Keyword),
                            ];
                        }
                    }
                    case "get":
                    case "names": {
                        if (words.length === 2) {
                            return [
                                new vscode.CompletionItem('-nocase', vscode.CompletionItemKind.Keyword),
                            ];
                        }
                    }

                }
            }
        }
        case "table": {
            if (words.length < 2) {
                return [
                    new vscode.CompletionItem('set', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('add', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('replace', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('lookup', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('incr', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('append', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('delete', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('timeout', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('lifetime', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('keys', vscode.CompletionItemKind.Method),
                ];
            } else {
                switch (words[1]) {
                    case "set":
                    case "add":
                    case "replace":
                    case "lookup":
                    case "incr":
                    case "append": {
                        if (words.length === 2) {
                            return [
                                new vscode.CompletionItem('-notouch', vscode.CompletionItemKind.Keyword),
                                new vscode.CompletionItem('-subtable', vscode.CompletionItemKind.Keyword),
                            ];
                        } else if (words.length === 3 && words[2] === '-notouch') {
                            return [
                                new vscode.CompletionItem('-subtable', vscode.CompletionItemKind.Keyword),
                            ];
                        }
                    }
                    case "delete":
                    case "lifetime":
                    case "timeout": {
                        if (words.length === 2) {
                            return [
                                new vscode.CompletionItem('-subtable', vscode.CompletionItemKind.Keyword),
                            ];
                        } else if (words.length === 4) {
                            return [
                                new vscode.CompletionItem('-remaining', vscode.CompletionItemKind.Keyword),
                            ];
                        }
                    }
                    case "keys": {
                        if (words.length === 2) {
                            return [
                                new vscode.CompletionItem('-subtable', vscode.CompletionItemKind.Keyword),
                            ];
                        } else if (words.length === 4) {
                            return [
                                new vscode.CompletionItem('-count', vscode.CompletionItemKind.Keyword),
                                new vscode.CompletionItem('-notouch', vscode.CompletionItemKind.Keyword),
                            ];
                        }
                    }
                }
            }
        }
        case 'HTTP::cookie': {
            if (words.length < 2) {
                return [
                    new vscode.CompletionItem('names', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('count', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('version', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('path', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('domain', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('ports', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('insert', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('remove', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('sanitize', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('exists', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('maxage', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('expires', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('comment', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('secure', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('commenturl', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('encrypt', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('decrypt', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('httponly', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('sanitize', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('attribute', vscode.CompletionItemKind.Method),
                ];
            }
        }
        case 'HTTP::header': {
            if (words.length < 2) {
                return [
                    new vscode.CompletionItem('values', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('names', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('count', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('at', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('exists', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('insert', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('lws', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('is_keepalive', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('is_redirect', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('replace', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('remove', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('insert_modssl_fields', vscode.CompletionItemKind.Method),
                    new vscode.CompletionItem('sanitize', vscode.CompletionItemKind.Method),
                ];
            }
        }
        case 'HTTP::respond': {
            let check = words.slice(1);
            if (check.length === 0 || (check.length === 1 && check[1] === '-reset')) {
                const h: vscode.CompletionItem[] = http_status_codes.slice(0);
                h.push(new vscode.CompletionItem('-reset', vscode.CompletionItemKind.Keyword));
                return h;
            }
            if (check[0] === '-reset') {
                check.shift();
            }
            if (check.length === 0) {
                return http_status_codes;
            }
            check.shift();
            if (check.length === 0) {
                return [
                    new vscode.CompletionItem('-version', vscode.CompletionItemKind.Keyword),
                    new vscode.CompletionItem('content', vscode.CompletionItemKind.Keyword),
                ];
            }
            if (check[0] === '-version') {
                if (check.length === 2) {
                    return [
                        new vscode.CompletionItem('1.0', vscode.CompletionItemKind.Enum),
                        new vscode.CompletionItem('1.1', vscode.CompletionItemKind.Enum),
                        new vscode.CompletionItem('auto', vscode.CompletionItemKind.Enum),
                    ];
                } else {
                    check.shift();
                    check.shift();
                }
            }
            if (check.length === 0) {
                return [
                    new vscode.CompletionItem('content', vscode.CompletionItemKind.Keyword),
                ];
            }
            if (check[0] === 'content') {
                if (check.length === 1) {
                    let completes = [
                        new vscode.CompletionItem('{...}', vscode.CompletionItemKind.Snippet),
                        new vscode.CompletionItem('"..."', vscode.CompletionItemKind.Snippet),
                        new vscode.CompletionItem('"<html>...</html>"', vscode.CompletionItemKind.Snippet),
                    ];
                    completes[0].insertText = new vscode.SnippetString('{${1}}');
                    completes[1].insertText = new vscode.SnippetString('"${1}"');
                    completes[2].insertText = new vscode.SnippetString('"<html><head><title>${1}</title></head><body><h1>${2}</h1><p>${3}</p></body></html>"');
                    return completes;
                } else {
                    check.shift();
                    check.shift();
                }
            }
            if ((check.length & 1) === 0) {
                return http_response_headers;
            } else {
                return http_response_headers_values[check[check.length - 1]];
            }
        }
        default: {
            if (words.length === 1) {
                let completes: vscode.CompletionItem[] = [];
                all_commands.forEach(el => {
                    if (el.startsWith(words[0]) && el !== words[0]) {
                        completes.push(new vscode.CompletionItem(el, vscode.CompletionItemKind.Function));
                    }
                });
                return completes;
            } else {
                if (words[words.length - 1].startsWith('[')) {
                    let completes: vscode.CompletionItem[] = [];
                    all_commands.forEach(el => {
                        if (el.startsWith(words[words.length - 1].substr(1)) && el !== words[words.length - 1].substr(1)) {
                            completes.push(new vscode.CompletionItem(el, vscode.CompletionItemKind.Function));
                        }
                    });
                    return completes;
                }
            }
            return undefined;
        }
    }
}